## Sample Nginx configuration for deploying this static site with HTTPS and HSTS
# Replace `example.com` with your domain and adjust `root` to your deployment path.

server {
    listen 80;
    server_name example.com www.example.com;
    root /var/www/bswl-site;
    index index.html;

    # Redirect all HTTP requests to HTTPS
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl http2;
    server_name example.com www.example.com;

    root /var/www/bswl-site;
    index index.html;

    # SSL certificate paths (Let's Encrypt default)
    ssl_certificate /etc/letsencrypt/live/example.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/example.com/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

    # Serve static files
    location / {
        try_files $uri $uri/ =404;
    }

    # Optional: gzip/ Brotli static content
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript image/svg+xml;
}

## After placing this file, run certbot to obtain certs and reload nginx:
# sudo apt install certbot python3-certbot-nginx
# sudo certbot --nginx -d example.com -d www.example.com
